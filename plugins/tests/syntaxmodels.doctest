SyntaxModels
============

The a SyntaxModels class represents a word source and syntax rules.
It can build a list of matching words when provided a word prefix.
Some syntax completers require a buffer or a file path to as
their word source.


SyntaxModel
-----------

The base SyntaxModel class defines the core methods that all subclasses
may choose override. It also provides several helper methods and
properties.

    >>> from gdp.syntaxmodels import SyntaxModel
    >>> model = SyntaxModel()
    >>> model
    <gdp.syntaxmodels.SyntaxModel object at ...>
    
    >>> model.file_path is None
    True
    >>> model.buffer_text is None
    True

    >>> SyntaxModel().getWords('Ba')
    Traceback (most recent call last):
    ...
    NotImplementedError


TextModel
---------

The TextModel class represents plain text sources. The words of the
source are the words it represents, no alteration or interpretation is
applied. Words are identified by common word boundaries like
punctuation and line ends.

    >>> from gdp.syntaxmodels import TextModel
    >>> text_model = TextModel(
    ...     prefix='Ba', file_path='plugins/data/snark12.txt')
    >>> text_model
    <gdp.syntaxmodels.TextModel object at ...>

    >>> text_model.file_path
    'plugins/data/snark12.txt'
    
    >>> text_model.buffer_text
    'This is the Project Gutenberg Etext of The Hunting of the Snark...'

The getWords method returns all words that start with the prefix.
The method may be called without a prefix to return the words that
match the default prefix set on initialization. If the prefix is
passed, then it will be used to match words. Matching is 
case-sensitive.

    >>> text_model.getWords()
    ['Baker', 'Bandersnatch', 'Banker', 'Barrister', 'Ba']

    >>> text_model.getWords('Ba')
    ['Baker', 'Bandersnatch', 'Banker', 'Barrister', 'Ba']
    
    >>> text_model.getWords('Snar')
    ['Snark', 'Snarks', 'Snar']

    >>> text_model.getWords('snar')
    ['snark12', 'snarked', 'snar']
   
    >>> text_model.getWords('What-')
    ['What-was-his-name', 'What-you-may-call-um', 'What-']
