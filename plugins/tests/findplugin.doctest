FindPlugin
==========

The FindPlugin is a gedit plugin that search multiple files to find
text that matches the requested patten.

The plugin, like the gedit.Plugin object it descends from does not
require any parameters during initialization.

    >>> from gdpfind import FindPlugin
    >>> plugin = FindPlugin()
    >>> plugin
    <FindPlugin object at ... (GObject at ...)>


Gedit plugin API part 1
-----------------------

APIs for starting and using the plugin.


activate()
~~~~~~~~~~

Whenever a new gedit window is created the activate() method of the
plugin is called with one argument, the gedit.Window. The plugin
creates the FindController, and binds it and the window to itself.
It also adds the controller to the view.

    >>> from testing.gedithelpers import get_window
    >>> import gtk
    >>> import gedit
    >>> window, view, document = get_window('plugins/gdp/data/snark12.txt')
    >>> plugin.activate(window)
    >>> plugin.windows[window].window is window
    True
    >>> plugin.windows[window].controller
    <gdp.find.Finder object at ...>

The 'Find in files' item was created and added to the Search menu in
the UI.

    >>> plugin.windows[window].action_group.get_action(
    ...     'FindFiles').get_property('label')
    'Find in files...'
    >>> plugin.windows[window].ui_id
    2


update_ui()
~~~~~~~~~~~

Nothing happen with update_ui() is called. The menu it is valid for
the Gedit Window; the Gedit Document is not important.

    >>> plugin.update_ui(window)


Gedit plugin API part 2
-----------------------

APIs for removing the plugin.


deactivate()
~~~~~~~~~~~~

When a window is destroyed the deactivate function is called by the
app, passing the window to the function. The plugin unbinds the
controller from the views, then removes its own bindings to the window
and the controller.

    >>> plugin.deactivate(window)
    >>> window in plugin.windows
    False


Tear down
---------

gtksouceview2.View is not destroying itself. Call this manually.

    >>> view.destroy()

