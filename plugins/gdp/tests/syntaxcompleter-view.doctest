SyntaxView for SyntaxCompleter
==============================
The Syntax view is a widget for showing, filtering, and selecting
a word. It is a subclass of snippets.SnippetComplete and replaces
some if its data and methods with its own.


SyntaxView
----------

The SyntaxView requires a sources tuple of file_path and
sourcebuffer to build itself.

Note that the super class uses the gedit namespace that is not
available outside the hosted environment. The mock-based gedit
module is used in these tests. Compatible objects are added to the
Mock data dictionary for the mock functions and methods to
return when they are called in the next test.

    >>> from gdp.syntaxcompleter import SyntaxView
    >>> SyntaxView()
    Traceback (most recent call last):
    ...
    TypeError: __init__() takes at least 2 arguments (1 given)

    >>> from gdp.tests.helpers import get_sourcebuffer, get_mock
    >>> source_buffer = get_sourcebuffer('plugins/gdp/data/snark12.txt')
    >>> sources = ('', source_buffer)
    >>> # SnippetComplete.__init__ calls gedit behaviours that must
    >>> # return sensible data for this test.
    >>> import gtk
    >>> import gedit
    >>> mock = get_mock()
    >>> mock.data['app_get_default'] = gedit.App()
    >>> mock.data['App_get_active_window'] = gtk.Window(
    ...     type=gtk.WINDOW_TOPLEVEL)
    >>> view = SyntaxView(sources)
    >>> view
    <SyntaxView object (GtkWindow) at ...>

The SyntaxView overrides the snippets.SnippetComplete's initialization
to replace the model with SyntaxModel

    >>> view.model
    <SyntaxModel object (PyGtkGenericTreeModel) at ...>
    >>> len(view.model.words)
    1987
    >>> view.model.words == view.model.visible_words
    True
    >>> view.model.visible_words
    ['000', '000x100', '03', '08', '1', '10', '1992', '2', ...]
